using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Threading.Tasks;
using Microsoft.Azure.Management.MachineLearning.WebServices.Models;
using Microsoft.Azure.Management.MachineLearning.WebServices.Util;

namespace Microsoft.Azure.MachineLearning
{

    /// <summary>
    /// Describes an AzureML Web Service.
    /// </summary>
    public class WebService
    {
        /// <summary>
        /// Internal autogenerated model that holds properties of a web service.
        /// </summary>
        private Management.MachineLearning.WebServices.Models.WebService Definition { get; set; }

        /// <summary>
        /// The name of this web service.
        /// </summary>
        public string Title
        {
            get { return this.Definition.Properties.Title; }
            set { this.Definition.Properties.Title = value; }
        }

        /// <summary>
        /// The description for this web service.
        /// </summary>
        public string Description
        {
            get { return this.Definition.Properties.Description; }
            set { this.Definition.Properties.Description = value; }
        }

        /// <summary>
        /// DateTime for when this web service was created. Is readonly.
        /// </summary>
        public DateTime? CreatedOn
        {
            get
            {
                try
                {
                    var val = this.Definition.Properties.CreatedOn.Value;

                    return val;
                }
                catch (Exception)
                {
                    return null;
                }
            }
        }

        /// <summary>
        /// DateTime for when this web service was last modified. Is readonly.
        /// </summary>
        public DateTime? ModifiedOn
        {
            get
            {
                try
                {
                    var val = this.Definition.Properties.ModifiedOn.Value;

                    return val;
                }
                catch (Exception)
                {
                    return null;
                }
            }

            private set { throw new InvalidOperationException("Tried to set WebService.ModifiedOn. Cannot set value."); }
        }

        /// <summary>
        /// Provisioning state of this web service. One of 'Unknown', 'Provisioning', 'Succeeded', 'Failed', or 'Canceled'.
        /// </summary>
        public string ProvisioningState
        {
            get { return this.Definition.Properties.ProvisioningState; }

            private set { throw new InvalidOperationException("Tried to set WebService.ProvisioningState. Cannot set value."); }
        }

        /// <summary>
        /// Keys for this web service.
        /// </summary>
        public WebServiceKeys Keys
        {
            get { return this.Definition.Properties.Keys; }
            set { throw new InvalidOperationException("Tried to set WebService.Keys. Cannot set value."); }
        }

        /// <summary>
        /// Whether or not this web service is read only.
        /// </summary>
        public bool ReadOnlyProperty
        {
            get { return this.Definition.Properties.ReadOnlyProperty.Value; }
            set { this.Definition.Properties.ReadOnlyProperty = value; }
        }

        /// <summary>
        /// Flag that controls whether or not to expose sample data in this web service's swagger defintion.
        /// </summary>
        public bool ExposeSampleData
        {
            get { return this.Definition.Properties.ExposeSampleData.Value; }
            set { this.Definition.Properties.ExposeSampleData = value; }
        }

        /// <summary>
        /// Configuration for the service's realtime endpoint.
        /// </summary>
        public RealtimeConfiguration RealtimeConfiguration
        {
            get { return this.Definition.Properties.RealtimeConfiguration; }
            set { this.Definition.Properties.RealtimeConfiguration = value; }
        }

        /// <summary>
        /// Settings controlling the diagnostics traces collection for the web service.
        /// </summary>
        public DiagnosticsConfiguration Diagnostics
        {
            get { return this.Definition.Properties.Diagnostics; }
            set { this.Definition.Properties.Diagnostics = value; }
        }

        /// <summary>
        /// The storage account associated with the service. Stores both datasets and diagnostic traces.
        /// </summary>
        public StorageAccount StorageAccount
        {
            get { return this.Definition.Properties.StorageAccount; }
        }

        public MachineLearningWorkspace MachineLearningWorkspaceLearningWorkspace
        {
            get { return this.Definition.Properties.MachineLearningWorkspace; }
            private set { throw new InvalidOperationException("Tried to set WebService.MachineLearningWorkspace. Cannot set value."); }
        }

        WebService(string webServiceDefinitionFilePath)
        {
        }

        private Microsoft.Azure.Management.MachineLearning.WebServices.Models.WebService InputWebServiceFromWSDFile(Dictionary<string, string> webServiceParameters, string webServiceDefinitionFilePath)
        {
            string wsDefinition;

            using (StreamReader r = new StreamReader(webServiceDefinitionFilePath))
            {
                wsDefinition = r.ReadToEnd();
            }

            foreach (var kvp in webServiceParameters)
            {
                wsDefinition = wsDefinition.Replace($"$({kvp.Key})", kvp.Value);
            }

            // TODO: call this in the constructor and assign 
            return ModelsSerializationUtil.GetAzureMLWebServiceFromJsonDefinition(wsDefinition);
        }
    }
}
